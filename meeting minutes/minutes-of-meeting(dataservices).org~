#+TITLE: RoadMap for Data Services and Dashboard
#+DATE: November 14, 2014
#+Options: ^:nil

* Meeting at 3:30 p.m. VLEAD conference room

** Agenda
- To present a tentative roadmap for Data Services and Dashboard.
- To finalize the first few services to be implemented by Data Services.
- To list out the URLs of the services.
- To finalize which Database to use: Relational or Non-Relational.

** Decisions taken 
*1) Following services are to be implemented:*

- Saving the state of lab deployment 
- Retrieving the state of lab deployment
- Lab dependencies

*2) Implementation of the services* 

- This will be done by two layers: API Layer and Data Layer. 
[[Implemetation of service.jpg]]

- The input and output format will all be in JSON.

*3) Lab ids to be generated by Data Services*

Since the =lab_ids= present in the =labspec= are given by the developers
and they might not be consistent throughout, So It was decided that
when =OVPL= runs, The first request will be sent to the Data
Services. Data Services must create the =lab_id= and save the state of
the lab. Thus =labspec= does not need to have =lab_ids=. 

*4) List of finalized URLs*
|--------------------------------------------------------+-------------------------------------------------------------|
| Operation                                              | URL                                                         |
|--------------------------------------------------------+-------------------------------------------------------------|
| GET                                                    |                                                             |
| a) To get all the labs                                 | /labs                                                       |
| b) To get all the labs by discipline                   | /labs/discipline/disc_name                                  |
| c) To get all the labs by institute                    | /labs/inst/inst_name                                        |
| d) To get a specific lab                               | /labs/lab_id                                                |
| e) To get all the technologies used by specific lab    | /labs/lab_id/technologies                                   |
| f) To get all the developers engaged in a specific lab | /labs/lab_id/developers                                     |
| g) To get the labs info through query end point        | /labs?fields=name,discipline,institute                      |
|--------------------------------------------------------+-------------------------------------------------------------|
| POST                                                   | /labs/<param>  #Param refers to the parameters from labspec |
|--------------------------------------------------------+-------------------------------------------------------------|
| PUT                                                    | /labs/lab_id/<param>                                        |
|--------------------------------------------------------+-------------------------------------------------------------|


*5) Database Choice*
Mongodb ORM for Python - mongoengine is the database
chosen.  Although our data is mostly relational and scaling is not 
an issue but change in schema is one very important factor that lead
to this decision. 

If we go with Relational(MYSQL) db, and certain information is added
in future, it might disturb the whole schema. In that case,
maintaining the structure of the data will be a concern.On the other
hand, Non-Relational(NOSQL) db is schema less and searching or
querying should also not take much time since the data size is not too
big.


** Action Items
- Sprint Planning to be done today.
